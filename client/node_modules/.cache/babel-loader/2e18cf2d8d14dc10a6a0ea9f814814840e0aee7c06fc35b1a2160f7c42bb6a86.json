{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\Network\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\"; // API 호출을 위한 axios\nimport Header from \"./components/Header.js\";\nimport GameList from \"./components/GameList.js\";\nimport ScoreBoard from \"./components/ScoreBoard.js\";\nimport ChatRoom from \"./components/ChatRoom.js\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [games, setGames] = useState([]); // 경기 데이터 상태\n  const [selectedGame, setSelectedGame] = useState(null); // 선택한 경기\n\n  // ⚾ 백엔드에서 경기 데이터를 가져오는 함수\n  const fetchGames = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/api/games\");\n      setGames(response.data);\n    } catch (error) {\n      console.error(\"❌ 경기 데이터 불러오기 실패:\", error);\n    }\n  };\n\n  // 10초마다 API 호출 (실시간 업데이트)\n  useEffect(() => {\n    fetchGames(); // 초기 실행\n    const interval = setInterval(fetchGames, 10000); // 10초마다 실행\n    return () => clearInterval(interval); // 컴포넌트 언마운트 시 정리\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GameList, {\n      games: games,\n      setSelectedGame: setSelectedGame\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), selectedGame && /*#__PURE__*/_jsxDEV(ScoreBoard, {\n      game: selectedGame\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 24\n    }, this), selectedGame && /*#__PURE__*/_jsxDEV(ChatRoom, {\n      game: selectedGame\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Xksp5J+m29wPPO+2OPD059LK+os=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","Header","GameList","ScoreBoard","ChatRoom","jsxDEV","_jsxDEV","App","_s","games","setGames","selectedGame","setSelectedGame","fetchGames","response","get","data","error","console","interval","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","game","_c","$RefreshReg$"],"sources":["D:/Project/Network/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\"; // API 호출을 위한 axios\r\nimport Header from \"./components/Header.js\";\r\nimport GameList from \"./components/GameList.js\";\r\nimport ScoreBoard from \"./components/ScoreBoard.js\";\r\nimport ChatRoom from \"./components/ChatRoom.js\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const [games, setGames] = useState([]); // 경기 데이터 상태\r\n  const [selectedGame, setSelectedGame] = useState(null); // 선택한 경기\r\n\r\n  // ⚾ 백엔드에서 경기 데이터를 가져오는 함수\r\n  const fetchGames = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/api/games\");\r\n      setGames(response.data);\r\n    } catch (error) {\r\n      console.error(\"❌ 경기 데이터 불러오기 실패:\", error);\r\n    }\r\n  };\r\n\r\n  // 10초마다 API 호출 (실시간 업데이트)\r\n  useEffect(() => {\r\n    fetchGames(); // 초기 실행\r\n    const interval = setInterval(fetchGames, 10000); // 10초마다 실행\r\n    return () => clearInterval(interval); // 컴포넌트 언마운트 시 정리\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Header />\r\n      <GameList games={games} setSelectedGame={setSelectedGame} />\r\n      {selectedGame && <ScoreBoard game={selectedGame} />}\r\n      {selectedGame && <ChatRoom game={selectedGame} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;AAC3B,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxC,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAExD;EACA,MAAMe,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,iCAAiC,CAAC;MACnEL,QAAQ,CAACI,QAAQ,CAACE,IAAI,CAAC;IACzB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IAC3C;EACF,CAAC;;EAED;EACAlB,SAAS,CAAC,MAAM;IACdc,UAAU,CAAC,CAAC,CAAC,CAAC;IACd,MAAMM,QAAQ,GAAGC,WAAW,CAACP,UAAU,EAAE,KAAK,CAAC,CAAC,CAAC;IACjD,OAAO,MAAMQ,aAAa,CAACF,QAAQ,CAAC,CAAC,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEb,OAAA;IAAKgB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBjB,OAAA,CAACL,MAAM;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVrB,OAAA,CAACJ,QAAQ;MAACO,KAAK,EAAEA,KAAM;MAACG,eAAe,EAAEA;IAAgB;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC3DhB,YAAY,iBAAIL,OAAA,CAACH,UAAU;MAACyB,IAAI,EAAEjB;IAAa;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAClDhB,YAAY,iBAAIL,OAAA,CAACF,QAAQ;MAACwB,IAAI,EAAEjB;IAAa;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAEV;AAACnB,EAAA,CA7BQD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AA+BZ,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}